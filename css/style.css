
body {
  background-color: #fafafa;
}

h1 {
  color: #004a7c;
  font-family: Georgia;
}

h3 {
  color: #004a7c;
  font-family: Georgia;
}

p {
  font-family: Georgia;
}

td {
  font-family: Georgia;
  vertical-align: bottom;
}

th {
  font-family: Georgia;
  text-align: left;
}

a {
  font-family: Georgia;
}

/* This is an example of using a pseudo class, which allows you to play with the appearance in given states*/
a:hover {
  color: darkgreen;
}

a:active {
  color: green;
}

form {
  font-family: Georgia;
}

hr {
  border-style: none;
  height: 1px;
  background-color: grey;
}

li {
  font-family: Georgia;
}

/* Note you can apply styles to specific classes using this method. You also have the method of using IDs, using the # syntax in CSS */
.Circular {
  border-radius: 100%;
}

/* When using CSS, inline and internal CSS override external CSS. CSS properties which are more specific override less specific properties. E.g. a style set on a specific class / ID
will be used above a style set generically over an element */
